{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///fpCode.min.js","webpack:///webpack/bootstrap 08bccb8e2920996e2278","webpack:///./src/index.js","webpack:///./~/blueimp-md5/js/md5.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","fpCode","password","key","length","hmd5","MD5","rule","split","source","str","i","isNaN","search","toUpperCase","code32","join","code01","slice","Object","defineProperty","value","default","__WEBPACK_AMD_DEFINE_RESULT__","$","safeAdd","x","y","lsw","msw","bitRotateLeft","num","cnt","md5cmn","q","a","b","s","t","md5ff","d","md5gg","md5hh","md5ii","binlMD5","len","olda","oldb","oldc","oldd","binl2rstr","input","output","length32","String","fromCharCode","rstr2binl","undefined","length8","charCodeAt","rstrMD5","rstrHMACMD5","data","hash","bkey","ipad","opad","concat","rstr2hex","hexTab","charAt","str2rstrUTF8","unescape","encodeURIComponent","rawMD5","hexMD5","rawHMACMD5","k","hexHMACMD5","md5","string","raw"],"mappings":"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","file":"fpCode.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"fpCode\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"fpCode\"] = factory();\n\telse\n\t\troot[\"fpCode\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"fpCode\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"fpCode\"] = factory();\n\telse\n\t\troot[\"fpCode\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = fpCode;\n\tvar MD5 = __webpack_require__(1);\n\t\n\tfunction fpCode(password, key, length) {\n\t  length = length || 16;\n\t\n\t  if (!password || !key || length < 2 || length > 32) {\n\t    return null;\n\t  }\n\t\n\t  var hmd5 = MD5(password, key);\n\t  var rule = MD5(hmd5, 'kise').split('');\n\t  var source = MD5(hmd5, 'snow').split('');\n\t  var str = 'sunlovesnow1990090127xykab';\n\t\n\t  for (var i = 0; i < 32; i++) {\n\t    if (isNaN(source[i])) {\n\t      if (str.search(rule[i]) > -1) {\n\t        source[i] = source[i].toUpperCase();\n\t      }\n\t    }\n\t  }\n\t\n\t  var code32 = source.join('');\n\t  var code01 = code32.slice(0, 1);\n\t  return (isNaN(code01) ? code01 : 'K') + code32.slice(1, length);\n\t}\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/*\n\t * JavaScript MD5\n\t * https://github.com/blueimp/JavaScript-MD5\n\t *\n\t * Copyright 2011, Sebastian Tschan\n\t * https://blueimp.net\n\t *\n\t * Licensed under the MIT license:\n\t * http://www.opensource.org/licenses/MIT\n\t *\n\t * Based on\n\t * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n\t * Digest Algorithm, as defined in RFC 1321.\n\t * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009\n\t * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n\t * Distributed under the BSD License\n\t * See http://pajhome.org.uk/crypt/md5 for more info.\n\t */\n\t\n\t/* global define */\n\t\n\t;(function ($) {\n\t  'use strict'\n\t\n\t  /*\n\t  * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n\t  * to work around bugs in some JS interpreters.\n\t  */\n\t  function safeAdd (x, y) {\n\t    var lsw = (x & 0xFFFF) + (y & 0xFFFF)\n\t    var msw = (x >> 16) + (y >> 16) + (lsw >> 16)\n\t    return (msw << 16) | (lsw & 0xFFFF)\n\t  }\n\t\n\t  /*\n\t  * Bitwise rotate a 32-bit number to the left.\n\t  */\n\t  function bitRotateLeft (num, cnt) {\n\t    return (num << cnt) | (num >>> (32 - cnt))\n\t  }\n\t\n\t  /*\n\t  * These functions implement the four basic operations the algorithm uses.\n\t  */\n\t  function md5cmn (q, a, b, x, s, t) {\n\t    return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b)\n\t  }\n\t  function md5ff (a, b, c, d, x, s, t) {\n\t    return md5cmn((b & c) | ((~b) & d), a, b, x, s, t)\n\t  }\n\t  function md5gg (a, b, c, d, x, s, t) {\n\t    return md5cmn((b & d) | (c & (~d)), a, b, x, s, t)\n\t  }\n\t  function md5hh (a, b, c, d, x, s, t) {\n\t    return md5cmn(b ^ c ^ d, a, b, x, s, t)\n\t  }\n\t  function md5ii (a, b, c, d, x, s, t) {\n\t    return md5cmn(c ^ (b | (~d)), a, b, x, s, t)\n\t  }\n\t\n\t  /*\n\t  * Calculate the MD5 of an array of little-endian words, and a bit length.\n\t  */\n\t  function binlMD5 (x, len) {\n\t    /* append padding */\n\t    x[len >> 5] |= 0x80 << (len % 32)\n\t    x[(((len + 64) >>> 9) << 4) + 14] = len\n\t\n\t    var i\n\t    var olda\n\t    var oldb\n\t    var oldc\n\t    var oldd\n\t    var a = 1732584193\n\t    var b = -271733879\n\t    var c = -1732584194\n\t    var d = 271733878\n\t\n\t    for (i = 0; i < x.length; i += 16) {\n\t      olda = a\n\t      oldb = b\n\t      oldc = c\n\t      oldd = d\n\t\n\t      a = md5ff(a, b, c, d, x[i], 7, -680876936)\n\t      d = md5ff(d, a, b, c, x[i + 1], 12, -389564586)\n\t      c = md5ff(c, d, a, b, x[i + 2], 17, 606105819)\n\t      b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330)\n\t      a = md5ff(a, b, c, d, x[i + 4], 7, -176418897)\n\t      d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426)\n\t      c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341)\n\t      b = md5ff(b, c, d, a, x[i + 7], 22, -45705983)\n\t      a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416)\n\t      d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417)\n\t      c = md5ff(c, d, a, b, x[i + 10], 17, -42063)\n\t      b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162)\n\t      a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682)\n\t      d = md5ff(d, a, b, c, x[i + 13], 12, -40341101)\n\t      c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290)\n\t      b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329)\n\t\n\t      a = md5gg(a, b, c, d, x[i + 1], 5, -165796510)\n\t      d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632)\n\t      c = md5gg(c, d, a, b, x[i + 11], 14, 643717713)\n\t      b = md5gg(b, c, d, a, x[i], 20, -373897302)\n\t      a = md5gg(a, b, c, d, x[i + 5], 5, -701558691)\n\t      d = md5gg(d, a, b, c, x[i + 10], 9, 38016083)\n\t      c = md5gg(c, d, a, b, x[i + 15], 14, -660478335)\n\t      b = md5gg(b, c, d, a, x[i + 4], 20, -405537848)\n\t      a = md5gg(a, b, c, d, x[i + 9], 5, 568446438)\n\t      d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690)\n\t      c = md5gg(c, d, a, b, x[i + 3], 14, -187363961)\n\t      b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501)\n\t      a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467)\n\t      d = md5gg(d, a, b, c, x[i + 2], 9, -51403784)\n\t      c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473)\n\t      b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734)\n\t\n\t      a = md5hh(a, b, c, d, x[i + 5], 4, -378558)\n\t      d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463)\n\t      c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562)\n\t      b = md5hh(b, c, d, a, x[i + 14], 23, -35309556)\n\t      a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060)\n\t      d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353)\n\t      c = md5hh(c, d, a, b, x[i + 7], 16, -155497632)\n\t      b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640)\n\t      a = md5hh(a, b, c, d, x[i + 13], 4, 681279174)\n\t      d = md5hh(d, a, b, c, x[i], 11, -358537222)\n\t      c = md5hh(c, d, a, b, x[i + 3], 16, -722521979)\n\t      b = md5hh(b, c, d, a, x[i + 6], 23, 76029189)\n\t      a = md5hh(a, b, c, d, x[i + 9], 4, -640364487)\n\t      d = md5hh(d, a, b, c, x[i + 12], 11, -421815835)\n\t      c = md5hh(c, d, a, b, x[i + 15], 16, 530742520)\n\t      b = md5hh(b, c, d, a, x[i + 2], 23, -995338651)\n\t\n\t      a = md5ii(a, b, c, d, x[i], 6, -198630844)\n\t      d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415)\n\t      c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905)\n\t      b = md5ii(b, c, d, a, x[i + 5], 21, -57434055)\n\t      a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571)\n\t      d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606)\n\t      c = md5ii(c, d, a, b, x[i + 10], 15, -1051523)\n\t      b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799)\n\t      a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359)\n\t      d = md5ii(d, a, b, c, x[i + 15], 10, -30611744)\n\t      c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380)\n\t      b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649)\n\t      a = md5ii(a, b, c, d, x[i + 4], 6, -145523070)\n\t      d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379)\n\t      c = md5ii(c, d, a, b, x[i + 2], 15, 718787259)\n\t      b = md5ii(b, c, d, a, x[i + 9], 21, -343485551)\n\t\n\t      a = safeAdd(a, olda)\n\t      b = safeAdd(b, oldb)\n\t      c = safeAdd(c, oldc)\n\t      d = safeAdd(d, oldd)\n\t    }\n\t    return [a, b, c, d]\n\t  }\n\t\n\t  /*\n\t  * Convert an array of little-endian words to a string\n\t  */\n\t  function binl2rstr (input) {\n\t    var i\n\t    var output = ''\n\t    var length32 = input.length * 32\n\t    for (i = 0; i < length32; i += 8) {\n\t      output += String.fromCharCode((input[i >> 5] >>> (i % 32)) & 0xFF)\n\t    }\n\t    return output\n\t  }\n\t\n\t  /*\n\t  * Convert a raw string to an array of little-endian words\n\t  * Characters >255 have their high-byte silently ignored.\n\t  */\n\t  function rstr2binl (input) {\n\t    var i\n\t    var output = []\n\t    output[(input.length >> 2) - 1] = undefined\n\t    for (i = 0; i < output.length; i += 1) {\n\t      output[i] = 0\n\t    }\n\t    var length8 = input.length * 8\n\t    for (i = 0; i < length8; i += 8) {\n\t      output[i >> 5] |= (input.charCodeAt(i / 8) & 0xFF) << (i % 32)\n\t    }\n\t    return output\n\t  }\n\t\n\t  /*\n\t  * Calculate the MD5 of a raw string\n\t  */\n\t  function rstrMD5 (s) {\n\t    return binl2rstr(binlMD5(rstr2binl(s), s.length * 8))\n\t  }\n\t\n\t  /*\n\t  * Calculate the HMAC-MD5, of a key and some data (raw strings)\n\t  */\n\t  function rstrHMACMD5 (key, data) {\n\t    var i\n\t    var bkey = rstr2binl(key)\n\t    var ipad = []\n\t    var opad = []\n\t    var hash\n\t    ipad[15] = opad[15] = undefined\n\t    if (bkey.length > 16) {\n\t      bkey = binlMD5(bkey, key.length * 8)\n\t    }\n\t    for (i = 0; i < 16; i += 1) {\n\t      ipad[i] = bkey[i] ^ 0x36363636\n\t      opad[i] = bkey[i] ^ 0x5C5C5C5C\n\t    }\n\t    hash = binlMD5(ipad.concat(rstr2binl(data)), 512 + data.length * 8)\n\t    return binl2rstr(binlMD5(opad.concat(hash), 512 + 128))\n\t  }\n\t\n\t  /*\n\t  * Convert a raw string to a hex string\n\t  */\n\t  function rstr2hex (input) {\n\t    var hexTab = '0123456789abcdef'\n\t    var output = ''\n\t    var x\n\t    var i\n\t    for (i = 0; i < input.length; i += 1) {\n\t      x = input.charCodeAt(i)\n\t      output += hexTab.charAt((x >>> 4) & 0x0F) +\n\t      hexTab.charAt(x & 0x0F)\n\t    }\n\t    return output\n\t  }\n\t\n\t  /*\n\t  * Encode a string as utf-8\n\t  */\n\t  function str2rstrUTF8 (input) {\n\t    return unescape(encodeURIComponent(input))\n\t  }\n\t\n\t  /*\n\t  * Take string arguments and return either raw or hex encoded strings\n\t  */\n\t  function rawMD5 (s) {\n\t    return rstrMD5(str2rstrUTF8(s))\n\t  }\n\t  function hexMD5 (s) {\n\t    return rstr2hex(rawMD5(s))\n\t  }\n\t  function rawHMACMD5 (k, d) {\n\t    return rstrHMACMD5(str2rstrUTF8(k), str2rstrUTF8(d))\n\t  }\n\t  function hexHMACMD5 (k, d) {\n\t    return rstr2hex(rawHMACMD5(k, d))\n\t  }\n\t\n\t  function md5 (string, key, raw) {\n\t    if (!key) {\n\t      if (!raw) {\n\t        return hexMD5(string)\n\t      }\n\t      return rawMD5(string)\n\t    }\n\t    if (!raw) {\n\t      return hexHMACMD5(key, string)\n\t    }\n\t    return rawHMACMD5(key, string)\n\t  }\n\t\n\t  if (true) {\n\t    !(__WEBPACK_AMD_DEFINE_RESULT__ = function () {\n\t      return md5\n\t    }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))\n\t  } else if (typeof module === 'object' && module.exports) {\n\t    module.exports = md5\n\t  } else {\n\t    $.md5 = md5\n\t  }\n\t}(this))\n\n\n/***/ }\n/******/ ])\n});\n;\n\n\n// WEBPACK FOOTER //\n// fpCode.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 08bccb8e2920996e2278","const MD5 = require('blueimp-md5');\n\nexport default function fpCode(password, key, length) {\n  length = length || 16;\n\n  if (!password || !key || (length < 2) || (length > 32)) {\n    return null;\n  }\n\n  const hmd5 = MD5(password, key);\n  const rule = MD5(hmd5, 'kise').split('');\n  let source = MD5(hmd5, 'snow').split('');\n  const str = 'sunlovesnow1990090127xykab';\n\n  for (let i = 0; i < 32; i++) {\n    if (isNaN(source[i])) {\n      if (str.search(rule[i]) > -1) {\n        source[i] = source[i].toUpperCase();\n      }\n    }\n  }\n\n  const code32 = source.join('');\n  const code01 = code32.slice(0, 1);\n  return (isNaN(code01) ? code01 : 'K') + code32.slice(1, length);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","/*\n * JavaScript MD5\n * https://github.com/blueimp/JavaScript-MD5\n *\n * Copyright 2011, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * http://www.opensource.org/licenses/MIT\n *\n * Based on\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n * Digest Algorithm, as defined in RFC 1321.\n * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for more info.\n */\n\n/* global define */\n\n;(function ($) {\n  'use strict'\n\n  /*\n  * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n  * to work around bugs in some JS interpreters.\n  */\n  function safeAdd (x, y) {\n    var lsw = (x & 0xFFFF) + (y & 0xFFFF)\n    var msw = (x >> 16) + (y >> 16) + (lsw >> 16)\n    return (msw << 16) | (lsw & 0xFFFF)\n  }\n\n  /*\n  * Bitwise rotate a 32-bit number to the left.\n  */\n  function bitRotateLeft (num, cnt) {\n    return (num << cnt) | (num >>> (32 - cnt))\n  }\n\n  /*\n  * These functions implement the four basic operations the algorithm uses.\n  */\n  function md5cmn (q, a, b, x, s, t) {\n    return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b)\n  }\n  function md5ff (a, b, c, d, x, s, t) {\n    return md5cmn((b & c) | ((~b) & d), a, b, x, s, t)\n  }\n  function md5gg (a, b, c, d, x, s, t) {\n    return md5cmn((b & d) | (c & (~d)), a, b, x, s, t)\n  }\n  function md5hh (a, b, c, d, x, s, t) {\n    return md5cmn(b ^ c ^ d, a, b, x, s, t)\n  }\n  function md5ii (a, b, c, d, x, s, t) {\n    return md5cmn(c ^ (b | (~d)), a, b, x, s, t)\n  }\n\n  /*\n  * Calculate the MD5 of an array of little-endian words, and a bit length.\n  */\n  function binlMD5 (x, len) {\n    /* append padding */\n    x[len >> 5] |= 0x80 << (len % 32)\n    x[(((len + 64) >>> 9) << 4) + 14] = len\n\n    var i\n    var olda\n    var oldb\n    var oldc\n    var oldd\n    var a = 1732584193\n    var b = -271733879\n    var c = -1732584194\n    var d = 271733878\n\n    for (i = 0; i < x.length; i += 16) {\n      olda = a\n      oldb = b\n      oldc = c\n      oldd = d\n\n      a = md5ff(a, b, c, d, x[i], 7, -680876936)\n      d = md5ff(d, a, b, c, x[i + 1], 12, -389564586)\n      c = md5ff(c, d, a, b, x[i + 2], 17, 606105819)\n      b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330)\n      a = md5ff(a, b, c, d, x[i + 4], 7, -176418897)\n      d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426)\n      c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341)\n      b = md5ff(b, c, d, a, x[i + 7], 22, -45705983)\n      a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416)\n      d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417)\n      c = md5ff(c, d, a, b, x[i + 10], 17, -42063)\n      b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162)\n      a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682)\n      d = md5ff(d, a, b, c, x[i + 13], 12, -40341101)\n      c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290)\n      b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329)\n\n      a = md5gg(a, b, c, d, x[i + 1], 5, -165796510)\n      d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632)\n      c = md5gg(c, d, a, b, x[i + 11], 14, 643717713)\n      b = md5gg(b, c, d, a, x[i], 20, -373897302)\n      a = md5gg(a, b, c, d, x[i + 5], 5, -701558691)\n      d = md5gg(d, a, b, c, x[i + 10], 9, 38016083)\n      c = md5gg(c, d, a, b, x[i + 15], 14, -660478335)\n      b = md5gg(b, c, d, a, x[i + 4], 20, -405537848)\n      a = md5gg(a, b, c, d, x[i + 9], 5, 568446438)\n      d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690)\n      c = md5gg(c, d, a, b, x[i + 3], 14, -187363961)\n      b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501)\n      a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467)\n      d = md5gg(d, a, b, c, x[i + 2], 9, -51403784)\n      c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473)\n      b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734)\n\n      a = md5hh(a, b, c, d, x[i + 5], 4, -378558)\n      d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463)\n      c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562)\n      b = md5hh(b, c, d, a, x[i + 14], 23, -35309556)\n      a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060)\n      d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353)\n      c = md5hh(c, d, a, b, x[i + 7], 16, -155497632)\n      b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640)\n      a = md5hh(a, b, c, d, x[i + 13], 4, 681279174)\n      d = md5hh(d, a, b, c, x[i], 11, -358537222)\n      c = md5hh(c, d, a, b, x[i + 3], 16, -722521979)\n      b = md5hh(b, c, d, a, x[i + 6], 23, 76029189)\n      a = md5hh(a, b, c, d, x[i + 9], 4, -640364487)\n      d = md5hh(d, a, b, c, x[i + 12], 11, -421815835)\n      c = md5hh(c, d, a, b, x[i + 15], 16, 530742520)\n      b = md5hh(b, c, d, a, x[i + 2], 23, -995338651)\n\n      a = md5ii(a, b, c, d, x[i], 6, -198630844)\n      d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415)\n      c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905)\n      b = md5ii(b, c, d, a, x[i + 5], 21, -57434055)\n      a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571)\n      d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606)\n      c = md5ii(c, d, a, b, x[i + 10], 15, -1051523)\n      b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799)\n      a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359)\n      d = md5ii(d, a, b, c, x[i + 15], 10, -30611744)\n      c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380)\n      b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649)\n      a = md5ii(a, b, c, d, x[i + 4], 6, -145523070)\n      d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379)\n      c = md5ii(c, d, a, b, x[i + 2], 15, 718787259)\n      b = md5ii(b, c, d, a, x[i + 9], 21, -343485551)\n\n      a = safeAdd(a, olda)\n      b = safeAdd(b, oldb)\n      c = safeAdd(c, oldc)\n      d = safeAdd(d, oldd)\n    }\n    return [a, b, c, d]\n  }\n\n  /*\n  * Convert an array of little-endian words to a string\n  */\n  function binl2rstr (input) {\n    var i\n    var output = ''\n    var length32 = input.length * 32\n    for (i = 0; i < length32; i += 8) {\n      output += String.fromCharCode((input[i >> 5] >>> (i % 32)) & 0xFF)\n    }\n    return output\n  }\n\n  /*\n  * Convert a raw string to an array of little-endian words\n  * Characters >255 have their high-byte silently ignored.\n  */\n  function rstr2binl (input) {\n    var i\n    var output = []\n    output[(input.length >> 2) - 1] = undefined\n    for (i = 0; i < output.length; i += 1) {\n      output[i] = 0\n    }\n    var length8 = input.length * 8\n    for (i = 0; i < length8; i += 8) {\n      output[i >> 5] |= (input.charCodeAt(i / 8) & 0xFF) << (i % 32)\n    }\n    return output\n  }\n\n  /*\n  * Calculate the MD5 of a raw string\n  */\n  function rstrMD5 (s) {\n    return binl2rstr(binlMD5(rstr2binl(s), s.length * 8))\n  }\n\n  /*\n  * Calculate the HMAC-MD5, of a key and some data (raw strings)\n  */\n  function rstrHMACMD5 (key, data) {\n    var i\n    var bkey = rstr2binl(key)\n    var ipad = []\n    var opad = []\n    var hash\n    ipad[15] = opad[15] = undefined\n    if (bkey.length > 16) {\n      bkey = binlMD5(bkey, key.length * 8)\n    }\n    for (i = 0; i < 16; i += 1) {\n      ipad[i] = bkey[i] ^ 0x36363636\n      opad[i] = bkey[i] ^ 0x5C5C5C5C\n    }\n    hash = binlMD5(ipad.concat(rstr2binl(data)), 512 + data.length * 8)\n    return binl2rstr(binlMD5(opad.concat(hash), 512 + 128))\n  }\n\n  /*\n  * Convert a raw string to a hex string\n  */\n  function rstr2hex (input) {\n    var hexTab = '0123456789abcdef'\n    var output = ''\n    var x\n    var i\n    for (i = 0; i < input.length; i += 1) {\n      x = input.charCodeAt(i)\n      output += hexTab.charAt((x >>> 4) & 0x0F) +\n      hexTab.charAt(x & 0x0F)\n    }\n    return output\n  }\n\n  /*\n  * Encode a string as utf-8\n  */\n  function str2rstrUTF8 (input) {\n    return unescape(encodeURIComponent(input))\n  }\n\n  /*\n  * Take string arguments and return either raw or hex encoded strings\n  */\n  function rawMD5 (s) {\n    return rstrMD5(str2rstrUTF8(s))\n  }\n  function hexMD5 (s) {\n    return rstr2hex(rawMD5(s))\n  }\n  function rawHMACMD5 (k, d) {\n    return rstrHMACMD5(str2rstrUTF8(k), str2rstrUTF8(d))\n  }\n  function hexHMACMD5 (k, d) {\n    return rstr2hex(rawHMACMD5(k, d))\n  }\n\n  function md5 (string, key, raw) {\n    if (!key) {\n      if (!raw) {\n        return hexMD5(string)\n      }\n      return rawMD5(string)\n    }\n    if (!raw) {\n      return hexHMACMD5(key, string)\n    }\n    return rawHMACMD5(key, string)\n  }\n\n  if (typeof define === 'function' && define.amd) {\n    define(function () {\n      return md5\n    })\n  } else if (typeof module === 'object' && module.exports) {\n    module.exports = md5\n  } else {\n    $.md5 = md5\n  }\n}(this))\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/blueimp-md5/js/md5.js\n// module id = 1\n// module chunks = 0"],"sourceRoot":""}